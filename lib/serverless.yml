service: Jarvis

provider:
  name: aws
  runtime: nodejs14.x
  memorySize: 512 # optional, in MB, default is 1024
  timeout: 10 # optional, in seconds, default is 6
  versionFunctions: false # optional, default is true
  # profile: ${env:CLOUD_PROFILE, 'jarvis'}
  stage: ${opt:stage, 'dev'}
  # Prefered region: eu-west-3
  environment:
    GOOGLE_APPLICATION_CREDENTIALS: ./.secret/credentials.json
    STAGE: ${self:provider.stage}
    SES_REGION: eu-west-1
    FAUNADB_TOKEN: ${env:FAUNADB_TOKEN}
  httpApi:
    cors: true

functions:
  tasks-reminder:
    handler: handler.taskReminder
    name: ${self:provider.stage}-tasks-reminder
    description: Regular email reminding of the tasks to do
    events:
      - schedule: cron(5 4 * * SUN,WED,SAT *)
        enabled: true

  meals-list:
    handler: handler.listMeals
    name: ${self:provider.stage}-meals-list
    description: List cooking meals
    events:
      - httpApi: 'GET /meals'
  meals-create:
    handler: handler.createMeal
    name: ${self:provider.stage}-meals-create
    description: Create a new meal
    events:
      - httpApi: 'POST /meals'
  meals-update:
    handler: handler.updateMeal
    name: ${self:provider.stage}-meals-update
    description: Update an existing meal
    events:
      - httpApi:
          path: /meals/{id}
          method: put
  meals-cook:
    handler: handler.cookMeal
    name: ${self:provider.stage}-meals-cook
    description: Mark a meal as cooked
    events:
      - httpApi:
          path: /meals/{id}/cooked
          method: put
  meals-delete:
    handler: handler.deleteMeal
    name: ${self:provider.stage}-meals-delete
    description: Deletes a meal
    events:
      - httpApi:
          path: /meals/{id}
          method: delete

custom:
  prune:
    automatic: true
    number: 5
  serverless-offline:
    httpPort: 4000

plugins:
  - serverless-prune-plugin
  - serverless-offline
